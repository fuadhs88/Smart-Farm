stages:
  - build
  - test
  - deploy

before_script:
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent -s)
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - ssh-add <(echo "$PRODUCTION_SSH_KEY")
  - '# Update source'
  - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $FASTPLAZ_PATH && git pull origin development'"
  - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH && git pull origin development'"

test_production:
  stage: test
  image: registry.gitlab.com/vizitrip/api-x
  script:
    - '# TEST PASSED .... (dummy)'

build_log:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Log Application'
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source && ./build.sh log'"
  when: manual

build_analytics:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Analytics Application'
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source && ./build.sh analytics'"
  when: manual

build_suggestion:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Search Application'
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source/suggestion && ./build.sh suggestion'"
  when: manual

build_hotel:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Hotel Application'
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source && ./build.sh hotel'"
  when: manual

build_message:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Messaging Feature'
    - echo $CI_JOB_STAGE
    - echo $CI_JOB_TOKEN
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source && ./build.sh message'"
  when: manual

build_search:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Simple Search Feature'
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source && ./build.sh search'"
  when: manual

build_image:
  stage: deploy
  image: luri/ssh-client
  script:
    - '# Compiling & Build Image Proxy'
    - ssh ubuntu@$PRODUCTION_HOST "sudo su - apix -c 'cd $SOURCE_PATH/source && ./build.sh image'"
  when: manual

